{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport { UserProfile } from '../_dtos/user/UserProfile';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./token-storage.service\";\nlet AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, tokenStorage) {\n      this.http = http;\n      this.tokenStorage = tokenStorage;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n    getToken() {\n      return this.tokenStorage.getToken();\n    }\n    setToken(token) {\n      this.tokenStorage.saveToken(token);\n    }\n    login(model) {\n      return this.http.post(`${environment.DOMAIN}/api/account/signin`, model, this.httpOptions).pipe(map(response => {\n        this.tokenStorage.saveToken(response.accessToken);\n        this.tokenStorage.saveUser(new UserProfile(response.id, response.email, response.name, response.imageUrl));\n        return response;\n      }));\n    }\n    register(model) {\n      return this.http.post(`${environment.DOMAIN}/api/account/signup`, model, this.httpOptions);\n    }\n    logout() {\n      this.tokenStorage.signOut();\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenStorageService));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}