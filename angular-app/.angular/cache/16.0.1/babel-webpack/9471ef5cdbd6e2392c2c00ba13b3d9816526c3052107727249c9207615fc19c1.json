{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./token-storage.service\";\nlet UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpClient, storage) {\n      this.httpClient = httpClient;\n      this.storage = storage;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n    fetchProfile() {\n      return this.httpClient.get(`${environment.DOMAIN}/api/user/me`, this.httpOptions).pipe(map(user => {\n        this.storage.saveUser(user);\n        return user;\n      }));\n    }\n    getProfile() {\n      return this.storage.getUser();\n    }\n    logout() {\n      this.storage.signOut();\n      window.location.reload();\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenStorageService));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac\n  });\n  return UserService;\n})();\nexport { UserService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}