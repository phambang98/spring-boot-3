{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { NbMessage } from \"../_dtos/chat/NbMessage\";\nimport { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./chat.service\";\nimport * as i3 from \"./token-storage.service\";\nimport * as i4 from \"./notification.service\";\nlet DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor(httpClient, chatService, storage, notificationService) {\n      this.httpClient = httpClient;\n      this.chatService = chatService;\n      this.storage = storage;\n      this.notificationService = notificationService;\n      this.myNbMessages = new BehaviorSubject([]);\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n      this.httpOptions.headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + this.storage.getToken()\n      });\n      this.nbMessages = this.myNbMessages.asObservable();\n    }\n    updateMessage(userMessages) {\n      let messageValue = this.myNbMessages.value;\n      let dataMessage = userMessages.map(m => {\n        return new NbMessage(m);\n      });\n      messageValue.concat(dataMessage);\n      this.myNbMessages.next(messageValue);\n      this.chatService.sortFriends();\n    }\n    sortFriends() {\n      this.myFriendProfiles.value.sort((obj1, obj2) => {\n        if (obj1.lastMsg > obj2.lastMsg) {\n          return 1;\n        }\n        if (obj1.lastMsg < obj2.lastMsg) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n  }\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ChatService), i0.ɵɵinject(i3.TokenStorageService), i0.ɵɵinject(i4.NotificationService));\n  };\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac\n  });\n  return DataService;\n})();\nexport { DataService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}