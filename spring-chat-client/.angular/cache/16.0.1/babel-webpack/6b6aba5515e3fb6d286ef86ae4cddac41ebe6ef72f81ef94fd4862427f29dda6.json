{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { DialogAuthenticationFailureComponent } from \"../../shared/dialog/dialog-alert/dialog-authentication-failure.component\";\nlet LoadingComponent = class LoadingComponent {\n  constructor(chatService, router, userService, dialogService, tokenStorageService, dataService) {\n    this.chatService = chatService;\n    this.router = router;\n    this.userService = userService;\n    this.dialogService = dialogService;\n    this.tokenStorageService = tokenStorageService;\n    this.dataService = dataService;\n    this.progress = 0;\n  }\n  ngOnInit() {\n    this.userService.fetchProfile().subscribe({\n      complete: () => {\n        this.progress = 10;\n        this.chatService.updateFetch(10);\n      },\n      error: e => {\n        this.errorFetch(e);\n      }\n    });\n    this.chatService.fetchFriends().subscribe({\n      complete: () => {\n        this.progress = 20;\n        this.chatService.updateFetch(20);\n        console.log(this.dataService.friends);\n      },\n      next: friendId => {\n        if (friendId) {\n          this.chatService.fetchMessages(friendId).subscribe({\n            complete: () => {\n              this.progress = 100;\n              this.chatService.updateFetch(100);\n            },\n            error: e => {\n              this.errorFetch(e);\n            }\n          });\n        }\n      },\n      error: e => {\n        this.errorFetch(e);\n      }\n    });\n  }\n  errorFetch(e) {\n    if (e.status === 401) {\n      this.dialogService.open(DialogAuthenticationFailureComponent, {\n        context: {\n          title: \"Authentication\",\n          message: 'Session Time Out'\n        }\n      }).onClose.subscribe(() => {\n        this.tokenStorageService.signOut();\n        window.location.reload();\n      });\n    } else {\n      console.log(e);\n    }\n  }\n};\nLoadingComponent = __decorate([Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})], LoadingComponent);\nexport { LoadingComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}